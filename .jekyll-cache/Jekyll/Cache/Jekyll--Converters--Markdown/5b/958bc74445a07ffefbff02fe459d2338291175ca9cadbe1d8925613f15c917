I"·<h2 id="general">General</h2>

<p>In order to support 64-bit memory buffers and array views, we have introduced the <code class="language-plaintext highlighter-rouge">LongIndexX</code> types that represent (multidimensional) 64-bit index value.
We have changed the return types of all <code class="language-plaintext highlighter-rouge">Length</code> and <code class="language-plaintext highlighter-rouge">LengthInBytes</code> properties from <code class="language-plaintext highlighter-rouge">int</code> to <code class="language-plaintext highlighter-rouge">long</code>.
This might affect your code base, if you work with explicit length information from views and buffers.
Furthermore, if you are using custom index, view or memory buffer implementations, you have to adapt your code to comply with the latest interface definitions or <code class="language-plaintext highlighter-rouge">IArrayView</code>, <code class="language-plaintext highlighter-rouge">IGenericIndex</code> and <code class="language-plaintext highlighter-rouge">IMemoryBuffer</code>.</p>

<p>It is possible to use 32-bit <code class="language-plaintext highlighter-rouge">IndexX</code> values and 64-bit <code class="language-plaintext highlighter-rouge">LongIndexX</code> values for accessing generic array views.
This allows programmers to decide whether they want to favor performance (fast 32-bit indexing) or large memory views (slower 64-bit indexing that consumes more 64-bit registers).
<em>Note that specialized array views working on 32-bit indexes will accept 32-bit <code class="language-plaintext highlighter-rouge">IndexX</code> instances only.</em></p>

<p>In order to provide backwards compatibility, it is possible to implicitly convert a <code class="language-plaintext highlighter-rouge">System.Int64</code> value into an <code class="language-plaintext highlighter-rouge">Index1</code> value.
Each conversion operator performs bounds checks that will trigger an assertion in the case on an overflow.
This allows you to launch your kernels using accesses to <code class="language-plaintext highlighter-rouge">Length</code> and <code class="language-plaintext highlighter-rouge">Extent</code> properties working on 64-bit integer values.</p>
:ET